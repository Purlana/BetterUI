<ls:UIWidget
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterCreation">

    <ls:UIWidget.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CharacterCreationLib_k.xaml"/>
                <ResourceDictionary Source="../Library/OptionTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary x:Key="BottomBoxesResources">
                <System:Double x:Key="MaxWrapPanelWidth">2100</System:Double>
            </ResourceDictionary>

            <ControlTemplate x:Key="InviteButtonTemplate">
                <ls:LSButton Command="{Binding DataContext.InvitePlayer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_Shared_Invite">
                    <ls:LSButton.ToolTip>
                        <ls:LSTooltip Content="{Binding Source='UICharacterAssign_InviteBtn',Converter={StaticResource TranslatedStringConverter}, ConverterParameter='ToUpper'}"/>
                    </ls:LSButton.ToolTip>
                    <ls:LSButton.Template>
                        <ControlTemplate TargetType="ls:LSButton">
                            <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_d.png" Stretch="None"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_h.png" TargetName="img"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_p.png" TargetName="img"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_disabled.png" TargetName="img"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ls:LSButton.Template>
                </ls:LSButton>
            </ControlTemplate>
            
            <ControlTemplate x:Key="MultiplayerPanelTemplate">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                    <ItemsControl ItemsSource="{Binding Data.Players}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Background="Black" Height="114" Width="114" />
                                    <Border Background="{Binding CommunityIcon}" Height="110" Width="110">
                                        <Border.ToolTip>
                                            <ls:LSTooltip Content="{Binding PlayerName}"/>
                                        </Border.ToolTip>
                                    </Border>
                                    <Image x:Name="frame" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_d.png" Stretch="None" IsHitTestVisible="False"/>
                                    <Image Visibility="{Binding Ready, Converter={StaticResource BoolToVisibleConverter}}" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_confirm.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                    <Control Template="{DynamicResource KickButton}" VerticalAlignment="Bottom" Margin="0 0 0 -30" />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_h.png"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <StackPanel x:Name="invites" Orientation="Horizontal" Margin="-10,0,0,0">
                        <ContentControl x:Name="invite0" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
                        <ContentControl x:Name="invite1" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
                        <ContentControl x:Name="invite2" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
                    </StackPanel>
                </StackPanel>

                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsHost}" Value="False">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="invites" Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DataContext.Data.LobbyVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Offline">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="invites" Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="1">
                        <Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="invite1" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="invite2" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="2">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="invite1" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="3">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="4">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <DataTemplate x:Key="AppearanceOptionTitle">
                <ContentControl Margin="0,40,0,0" Width="200"
                                Content="{Binding Text, Converter={StaticResource StringToUpperConverter}}"
                                Template="{StaticResource FloralFlairTitleTemplate}"
                                FontSize="{DynamicResource BigFontSize}"/>
            </DataTemplate>

            <DataTemplate x:Key="AppearanceOptionTemplate">
                <Grid Margin="0,4,0,4" Width="750">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="80,0,0,0"
                               Text="{Binding Text}"
                               x:Name="OptionText"
                               FontSize="{DynamicResource MediumFontSize}"
                               Foreground="{DynamicResource LS_TertiaryColor}"/>
                    <ContentControl x:Name="content"
                                    VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0"
                                    Template="{StaticResource ComboBoxTemplate}"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ListItemType}" Value="ComboBox">
                        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" TargetName="content"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListItemType}" Value="TickBox">
                        <Setter Property="Template" Value="{StaticResource TickBoxTemplate}" TargetName="content"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListItemType}" Value="Slider">
                        <Setter Property="Template" Value="{StaticResource SliderTemplate}" TargetName="content"/>
                        <Setter Property="Margin" Value="0,60,0,0" TargetName="content"/>
                        <Setter Property="VerticalAlignment" Value="Top" TargetName="content"/>
                        <Setter Property="HorizontalAlignment" Value="center" TargetName="content"/>
                        <Setter Property="Margin" Value="0,20,0,0" TargetName="OptionText"/>
                        <Setter Property="HorizontalAlignment" Value="center" TargetName="OptionText"/>
                        <Setter Property="VerticalAlignment" Value="Top" TargetName="OptionText"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="AppearanceOptionStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="ContentTemplate" Value="{StaticResource AppearanceOptionTemplate}" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="IsSelected" Value="False"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="IsSelected" Value="True"/>
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ColorCellItemStyle" TargetType="FrameworkElement">
                <Setter Property="Margin" Value="0,0,5,5"/>
                <Setter Property="Width" Value="58"/>
                <Setter Property="Height" Value="58"/>
            </Style>

            <ControlTemplate x:Key="ColorCellTemplate">
                <Grid>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/palette_shine.png"/>
                    <Image x:Name="SelectedImg" Visibility="Hidden" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/palette_selected.png"/>

                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Selected}" Value="True">
                        <Setter TargetName="SelectedImg" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <DataTemplate x:Key="SkinColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetSkinColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}}"/>
                    </Grid.ToolTip>

                    <Control DataContext="{Binding}"  Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="CCSkinColorGrid">
                <ItemsControl ItemsSource="{Binding }" ItemTemplate="{StaticResource SkinColorCellTemplate}"  Width="{DynamicResource ColorGridWidth}" ItemContainerStyle="{StaticResource ColorCellItemStyle}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>

            <DataTemplate x:Key="EyeColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetEyeColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}}"/>
                    </Grid.ToolTip>

                    <Control DataContext="{Binding}"  Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="CCEyeColorGrid">
                <ItemsControl ItemsSource="{Binding }" ItemTemplate="{StaticResource EyeColorCellTemplate}"  Width="{DynamicResource ColorGridWidth}" ItemContainerStyle="{StaticResource ColorCellItemStyle}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>

            <DataTemplate x:Key="HairColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetHairColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}}"/>
                    </Grid.ToolTip>
                    <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="CCHairColorGrid">
                <ItemsControl ItemsSource="{Binding }" ItemTemplate="{StaticResource HairColorCellTemplate}"  Width="{DynamicResource ColorGridWidth}" ItemContainerStyle="{StaticResource ColorCellItemStyle}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>

            <ControlTemplate x:Key="CCColorGrid">
                <ItemsControl ItemsSource="{Binding ColorSwatch}" Width="{DynamicResource ColorGridWidth}" ItemContainerStyle="{StaticResource ColorCellItemStyle}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding DataContext.SetColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid.ToolTip>
                                    <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}}"/>
                                </Grid.ToolTip>
                                <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>

            <ControlTemplate x:Key="CharacterCreationStepButtons" TargetType="Control">
                <ControlTemplate.Resources>
                    <Style TargetType="Image" BasedOn="{StaticResource StepButtonFiller}"/>
                </ControlTemplate.Resources>
                <StackPanel Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <ls:LSRadioButton x:Name="originBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Origin" SoundID="UI_HUD_CC_Origin" Content="{Binding Source='UI_CC_Origin', Converter={StaticResource TranslatedStringConverter}}" Margin="0,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_origin.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image />
                    <ls:LSRadioButton x:Name="raceBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Race" SoundID="UI_HUD_CC_Race" Content="{Binding Source='UI_CC_Race', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_race.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image />
                    <ls:LSRadioButton x:Name="appearanceBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Appearance" SoundID="UI_HUD_CC_Appearance" Content="{Binding Source='UI_CC_Appearance', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_appearance.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image />
                    <ls:LSRadioButton x:Name="classBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Class" SoundID="UI_HUD_CC_Class" Content="{Binding Source='UI_CC_Class', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_class.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image />
                    <ls:LSRadioButton x:Name="skillsBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Skills" SoundID="UI_HUD_CC_Skills" Content="{Binding Source='UI_CC_Skills', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_skills.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image />
                    <ls:LSRadioButton x:Name="abilitiesBtn" Template="{DynamicResource StepButton}" Command="{Binding SetCharacterCreationStep}" CommandParameter="Abilities" SoundID="UI_HUD_CC_Abilities" Content="{Binding Source='UI_CC_Abilities', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_abilities.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>

                    <Image/>

                    <StackPanel Orientation="Horizontal" Margin="-16,26,0,0">
                        <Grid Margin="0,0,-16,0">
                            <ls:LSButton x:Name="prevBtn" Command="{Binding PrevCharacterCreationStep}" SoundID="UI_HUD_CC_Accept" Template="{DynamicResource NavButton}">
                                <ls:LSButton.Resources>
                                    <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_left.png"/>
                                    <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_left.png"/>
                                </ls:LSButton.Resources>
                            </ls:LSButton>
                        </Grid>
                        <Image Style="{StaticResource StepButtonFiller}" Margin="0,-16,0,16"/>
                        <ls:LSButton x:Name="nextBtn" SoundID="UI_HUD_CC_Accept" Template="{DynamicResource NavButton}" Margin="-16,0,0,0" Command="{Binding NextCharacterCreationStep}">
                            <ls:LSButton.Resources>
                                <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_right.png"/>
                                <BitmapImage x:Key="IconHighlight" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_right.png"/>
                            </ls:LSButton.Resources>
                        </ls:LSButton>

                    </StackPanel>

                </StackPanel>

                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                        <Setter TargetName="nextBtn" Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Origin">
                        <Setter TargetName="originBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Race">
                        <Setter TargetName="raceBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Appearance">
                        <Setter TargetName="appearanceBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Class">
                        <Setter TargetName="classBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Skills">
                        <Setter TargetName="skillsBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Abilities">
                        <Setter TargetName="abilitiesBtn" Property="IsChecked" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding OriginInvalid}" Value="True">
                        <Setter TargetName="originBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BackgroundInvalid}" Value="True">
                        <Setter TargetName="originBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding RaceAbilityInvalid}" Value="True">
                        <Setter TargetName="raceBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RacePassiveInvalid}" Value="True">
                        <Setter TargetName="raceBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding VoiceInvalid}" Value="True">
                        <Setter TargetName="appearanceBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ClassInvalid}" Value="True">
                        <Setter TargetName="classBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassAbilityInvalid}" Value="True">
                        <Setter TargetName="classBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassPassiveInvalid}" Value="True">
                        <Setter TargetName="classBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding GodInvalid}" Value="True">
                        <Setter TargetName="classBtn" Property="Tag" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SpellPrepare.IsInvalid}" Value="True">
                        <Setter TargetName="classBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding SkillsInvalid}" Value="True">
                        <Setter TargetName="skillsBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding AbilitiesInvalid}" Value="True">
                        <Setter TargetName="abilitiesBtn" Property="Tag" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="CommonCharacterCreationPanel">
                <ls:LSScrollViewer x:Name="scroller" Template="{DynamicResource ScrollViewerTemplate}" VerticalScrollBarVisibility="Visible" Width="1100" Padding="{TemplateBinding Padding}" Margin="100,0,0,0">
                    <ls:LSScrollViewer.Resources>
                        <GridLength x:Key="Top">200</GridLength>
                        <GridLength x:Key="Bottom">200</GridLength>
                    </ls:LSScrollViewer.Resources>

                    <ContentPresenter MaxWidth="1100" Margin="0,20,0,0"/>

                </ls:LSScrollViewer>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="scroller" Property="ScrollWheelEnabled" Value="True"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter TargetName="scroller" Property="ScrollWheelEnabled" Value="False"/>
                    </Trigger>                    
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="GenderTemplate">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="ls:LSRadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ls:LSRadioButton">
                                        <Grid>
                                            <DockPanel Width="104">
                                                <Image DockPanel.Dock="Left" x:Name="img01" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_01.png" Stretch="None"/>
                                                <Image DockPanel.Dock="Right" x:Name="img05" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_05.png" Stretch="None"/>
                                                <Grid x:Name="g02">
                                                    <Grid.Background>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Grid.Background>
                                                </Grid>
                                            </DockPanel>
                                            <Image x:Name="icon" Source="{DynamicResource Icon}" Stretch="None"/>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="img01" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_01.png"/>
                                                <Setter TargetName="img05" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_05.png"/>
                                                <Setter TargetName="g02" Property="Background">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="icon" Property="Source" Value="{DynamicResource Icon_Hover}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="img01" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_01.png"/>
                                                <Setter TargetName="img05" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_05.png"/>
                                                <Setter TargetName="g02" Property="Background">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter TargetName="img01" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_01.png"/>
                                                    <Setter TargetName="img05" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_05.png"/>
                                                    <Setter TargetName="g02" Property="Background">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_02.png" Stretch="None" TileMode="Tile"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <ls:LSRadioButton x:Name="FemaleButton" Command="{Binding SetGender}" CommandParameter="Female" SoundID="UI_HUD_CC_Gender_F">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_female_d.png"/>
                            <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_female_h.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <ls:LSRadioButton x:Name="MaleButton" Command="{Binding SetGender}" CommandParameter="Male" SoundID="UI_HUD_CC_Gender_M">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage x:Key="Icon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_male_d.png"/>
                            <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_male_h.png"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Gender}" Value="Male">
                        <Setter Property="IsChecked" Value="True" TargetName="MaleButton"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Gender}" Value="Female">
                        <Setter Property="IsChecked" Value="True" TargetName="FemaleButton"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CanEditGender}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="PlayOriginStoryButtonStyle" TargetType="{x:Type ls:LSButton}">
                <Setter Property="Template" Value="{DynamicResource CarouselButtonTemplate}"/>
                <Style.Resources>
                    <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_d.png</ImageSource>
                    <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_h.png</ImageSource>
                    <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_h.png</ImageSource>
                    <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_d.png</ImageSource>
                </Style.Resources>
            </Style>

            <ControlTemplate x:Key="OriginStoryTemplate">
                <Grid>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ornate_buttonFrame.png" Stretch="None"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ls:LSButton Opacity="0.5" IsEnabled="False" Style="{StaticResource PlayOriginStoryButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0"
                                             Command="{Binding DataContext.PlayOriginStory, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_ListenOrigin"/>
                        <TextBlock Text="{Binding Source='UI_CC_Listen_To_Origin_Story', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource MediumFontSize}" Margin="20,0,0,0"/>
                    </StackPanel>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="OriginCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Margin="-100,0,100,0" Padding="34,0,0,0">
                    <StackPanel>
                        <TextBlock Text="{Binding Source='UI_CC_Select_Origin', Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource PanelTitleText}" Margin="0,0,0,0"/>
                        <ContentControl Template="{StaticResource GenderTemplate}" HorizontalAlignment="Center"/>

                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding OriginCharacters}" Resources="{StaticResource SideBoxesTripleResources}" Margin="0,32,0,0"/>

                        <StackPanel HorizontalAlignment="Center" Visibility="{Binding CanEditName, Converter={StaticResource BoolToVisibleConverter}}">
                            <TextBlock Text="{Binding Source='UI_CC_Custom_Origin', Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource PanelTitleText}" Margin="0,32,0,0"/>

                            <TextBlock Text="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelTitleInfoText}" Margin="0,8,0,0"/>

                            <TextBlock Text="{Binding Source='UI_CC_Name_Character', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" Margin="0,32,0,0"/>
                            <Grid Margin="0,16,0,0" HorizontalAlignment="Center">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/frame_textInput.png" Stretch="None"/>
                                <ls:LSTextBox Text="{Binding CharacterName}" IsEnabled="{Binding CanEditName}" HorizontalContentAlignment="Center" MaxLength="20" TextImmediateSourceUpdate="True" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource MediumFontSize}" TextAlignment="Center" Margin="70,18,70,18"/>
                            </Grid>

                            <TextBlock Text="{Binding Source='UI_CC_Select_Background', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" Margin="0,100,0,0"/>
                            <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding Backgrounds}"/>
                            <TextBlock Text="{Binding DummyCharacter.Stats.BackgroundDescription}" Style="{StaticResource PanelInfoText}" Margin="0,32,0,0"/>
                        </StackPanel>

                            <StackPanel HorizontalAlignment="Center" Visibility="{Binding CanEditName, Converter={StaticResource BoolToCollapsedConverter}}">
                                <TextBlock Text="{Binding OriginCharacters.SelectedItem.Name}" Style="{DynamicResource PanelTitleText}" FontSize="{DynamicResource GiganticFontSize}" Margin="0,32,0,0"/>
                                <TextBlock Text="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelTitleInfoText}" Margin="0,8,0,0"/>
                                <ContentControl Template="{StaticResource OriginStoryTemplate}" Margin="0,20,0,0"/>
                            </StackPanel>

                        <Control Template="{StaticResource CharacterBackgroundFeatures}" Visibility="{Binding BackgroundFeatures.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>

            <ControlTemplate x:Key="RaceCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="34,0,0,0">
                    <StackPanel Margin="0,0,0,100">

                        <TextBlock Text="{Binding Source='UI_CC_Select_Race', Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource PanelTitleText}"/>
                        <ContentControl Template="{StaticResource GenderTemplate}" HorizontalAlignment="Center" Margin="0,0,0,32"/><!--Modded-->

                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Races}" Resources="{StaticResource SideBoxesTripleResources}"/>

                        <StackPanel Visibility="{Binding Subraces.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}" Margin="0,32,0,0">
                            <TextBlock Text="{Binding Source='UI_CC_Select_Subrace', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                            <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding Subraces}"/>
                        </StackPanel>

                        <TextBlock Text="{Binding DummyCharacter.Stats.RaceDescription}" Style="{StaticResource PanelTitleInfoText}" Margin="0,32,0,0"/>

                        <ContentControl Template="{StaticResource SpellBoxesTemplate}" DataContext="{Binding RaceProgressionDetails}"/>

                        <ContentControl Template="{StaticResource ValidationFailedHighlighter}" Tag="{Binding RacePassiveInvalid}" Visibility="{Binding RacePassives.Count, Converter={StaticResource CountToVisibleConverter}}" Margin="0,30,0,30">
                            <ItemsControl ItemsSource="{Binding RacePassives}" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center" Margin="0,24,0,0">
                                            <TextBlock Style="{StaticResource PanelHeaderText}">
                                                <Run Text="{Binding DisplayName}"/>
                                                <Run Text="{Binding SelectedPassiveCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedPassiveCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                            <ContentControl Template="{StaticResource SelectPassives}" DataContext="{Binding Passives}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ContentControl>

                        <ContentControl Margin="0,32,0,0" Template="{StaticResource CharacterRaceFeatures}" Visibility="{Binding RaceProgressionDetails.IsEmpty, Converter={StaticResource BoolToHiddenConverter}}"/>

                    </StackPanel>
                </ContentControl>
            </ControlTemplate>

            <ControlTemplate x:Key="AppearanceTemplate">
                <ControlTemplate.Resources>
                    <System:Double x:Key="ColorGridWidth">760</System:Double>
                </ControlTemplate.Resources>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="{DynamicResource LS_TertiaryColor}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Height" Value="200"/>
                            <Setter Property="Margin" Value="0,20,0,0"/>
                        </Style>
                        <Style TargetType="Image">
                            <Setter Property="Margin" Value="0,20,0,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="{Binding Source='UI_CC_Appearance', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelTitleText}"/>

                    <ContentControl Template="{StaticResource GenderTemplate}" HorizontalAlignment="Center" Margin="-12,0,0,0"/><!--Modded-->

                    <!-- Voice -->
                    <TextBlock Text="{Binding Source='UI_CC_Voice', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" HorizontalAlignment="Center"/>
                    <ContentControl Template="{StaticResource ValidationFailedHighlighter}" Tag="{Binding VoiceInvalid}" Margin="0,20,0,0">
                        <ContentControl Template="{DynamicResource Carousel}" DataContext="{Binding Voices}"/>
                    </ContentControl>
                    <Grid>
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ornate_buttonFrame.png" Stretch="None" Margin="0"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ls:LSButton Style="{StaticResource PlayOriginStoryButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                            Command="{Binding DataContext.PlayVoice, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_Accept"/>
                            <TextBlock Text="{Binding Source='UI_CC_Hear_Voice', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource MediumFontSize}" Margin="20,0,0,0"/>
                        </StackPanel>
                    </Grid>

                    <!-- Face -->
                    <TextBlock Text="{Binding Source='UI_CC_Face', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                    <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceFaces}"/>

                    <!-- Horns -->
                    <StackPanel Visibility="{Binding AppearanceHorns.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Text="{Binding Source='UI_CC_Horn_Style', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceHorns}" />
                    </StackPanel>

                    <!-- Skin -->
                    <TextBlock Text="{Binding Source='UI_CC_Skin_Color', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                    <ListBox ItemsSource="{Binding SkinColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" HorizontalAlignment="Center">
                        <ListBox.Template>
                            <ControlTemplate >
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding SkinColors}" Template="{StaticResource CCSkinColorGrid}" HorizontalAlignment="Center"/>

                    <!-- Eye -->
                    <TextBlock Text="{Binding Source='UI_CC_Eye_Color', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                    <ListBox ItemsSource="{Binding EyeColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" HorizontalAlignment="Center">
                        <ListBox.Template>
                            <ControlTemplate >
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding EyeColors}" Template="{StaticResource CCEyeColorGrid}" HorizontalAlignment="Center"/>

                    <!-- Hair (+ Beard if available) -->
                    <TextBlock Text="{Binding Source='UI_CC_Hair_Style', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                    <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceHairstyles}"/>
                    <StackPanel Visibility="{Binding AppearanceBeards.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Text="{Binding Source='UI_CC_Beard', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceBeards}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding Source='UI_CC_Hair_Color', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                    <ListBox ItemsSource="{Binding HairColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" HorizontalAlignment="Center">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding HairColors}" Template="{StaticResource CCHairColorGrid}" HorizontalAlignment="Center"/>

                    <!-- Tattoos -->
                    <StackPanel Visibility="{Binding AppearanceTattoos.Materials.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Text="{Binding Source='UI_CC_Tattoo_Style', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceTattoos.Materials}" HorizontalAlignment="Center"/>
                        <StackPanel HorizontalAlignment="Center">
                            <ListBox ItemsSource="{Binding AppearanceTattoos.ColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                            </ListBox>
                            <ItemsControl DataContext="{Binding AppearanceTattoos}" Template="{StaticResource CCColorGrid}" ItemContainerStyle="{StaticResource ColorCellItemStyle}"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceTattoos.EmptyMaterialSelected}" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </StackPanel>

                    <!-- Makeup -->
                    <StackPanel Visibility="{Binding AppearanceMakeup.Materials.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Text="{Binding Source='UI_CC_Makeup_Style', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceMakeup.Materials}" HorizontalAlignment="Center"/>
                        <StackPanel HorizontalAlignment="Center">
                            <ListBox ItemsSource="{Binding AppearanceMakeup.ColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                            </ListBox>
                            <ItemsControl DataContext="{Binding AppearanceMakeup}" Template="{StaticResource CCColorGrid}" ItemContainerStyle="{StaticResource ColorCellItemStyle}"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceMakeup.EmptyMaterialSelected}" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>

<TextBlock Text="{Binding Source='UI_CC_Makeup_Style', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding AppearanceMakeup.Materials}" HorizontalAlignment="Center"/>
                        <StackPanel HorizontalAlignment="Center">
                            <ListBox ItemsSource="{Binding AppearanceMakeup.ColorOptions}" ItemContainerStyle="{StaticResource AppearanceOptionStyle}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                            </ListBox>
                            <ItemsControl DataContext="{Binding AppearanceMakeup}" Template="{StaticResource CCColorGrid}" ItemContainerStyle="{StaticResource ColorCellItemStyle}"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceMakeup.EmptyMaterialSelected}" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>

                    </StackPanel>
                </StackPanel>
            </ControlTemplate>


            <ControlTemplate x:Key="AppearanceCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="122,0,0,0">
                    <Control Template="{StaticResource AppearanceTemplate}" Margin="100,0,0,0"/>
                </ContentControl>
            </ControlTemplate>

            <ControlTemplate x:Key="ClassCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="30,0,0,0">
                    <StackPanel Margin="0,0,0,100">

                        <TextBlock Text="{Binding Source='UI_CC_Select_Class', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelTitleText}"/>

                        <StackPanel Margin="0,32,0,0">
                            <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Classes}" Resources="{StaticResource SideBoxesTripleResources}"/>

                            <Grid Width="1000" HorizontalAlignment="Center" Margin="0,32,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Image Grid.Row="1" Grid.Column="0" DataContext="{Binding DummyCharacter.Stats.ClassList[0]}" Style="{DynamicResource ClassIconStyle}"/>

                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding DummyCharacter.Stats.ClassList[0].ClassDisplayName}" Style="{StaticResource PanelTitleText}" HorizontalAlignment="Center" Margin="0,0,0,-80"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding DummyCharacter.Stats.ClassList[0].ClassDescription}" Style="{StaticResource PanelTitleInfoText}" TextAlignment="Left" VerticalAlignment="Top" Margin="0,80,0,0" TextWrapping="Wrap" Width="700"/>
                            </Grid>

                            <ContentControl x:Name="classSpells" Visibility="Collapsed" Template="{StaticResource SpellBoxesTemplate}" DataContext="{Binding ClassProgressionDetails}" Margin="0,20,0,0"/>
                            <ContentControl x:Name="classSpellPreparation" Visibility="Collapsed" Template="{StaticResource SpellPreparationTemplate}" Margin="0,0,0,10"/>

                        </StackPanel>


                        <StackPanel Visibility="{Binding Subclasses.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <TextBlock Text="{Binding Source='UI_CC_Subclass', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

                            <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding Subclasses}"/>

                            <TextBlock Text="{Binding DummyCharacter.Stats.ClassList[0].SubclassDescription}" Style="{StaticResource PanelInfoText}" Margin="0,20,0,0"/>

                            <StackPanel Visibility="{Binding Gods.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <TextBlock Text="{Binding Source='UI_CC_Select_God', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                                <ContentControl Template="{StaticResource ValidationFailedHighlighter}" Tag="{Binding GodInvalid}" Margin="0,20,0,0">
                                    <ContentControl Template="{DynamicResource Carousel}" DataContext="{Binding Gods}"/>
                                </ContentControl>
                                <TextBlock Text="{Binding DummyCharacter.Stats.GodDescription}" Style="{StaticResource PanelInfoText}" Margin="0,20,0,0"/>
                            </StackPanel>

                            <ContentControl Template="{StaticResource SpellBoxesTemplate}" DataContext="{Binding ClassProgressionDetails}" Margin="0,20,0,0"/>
                            <ContentControl Template="{StaticResource SpellPreparationTemplate}" Margin="0,0,0,30"/>

                        </StackPanel>

                        <ItemsControl x:Name="classPassives" ItemsSource="{Binding ClassPassives}" Visibility="{Binding ClassPassives.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,20,0,0">
                                        <TextBlock Style="{StaticResource PanelHeaderText}">
                                            <Run Text="{Binding DisplayName}"/>
                                            <Run Text="{Binding SelectedPassiveCount, StringFormat=' ({0}'}"/>
                                            <Run Text="{Binding MaxSelectedPassiveCount, StringFormat='/{0})'}"/>
                                        </TextBlock>
                                        <ContentControl Template="{StaticResource ValidationFailedHighlighter}" Tag="{Binding DataContext.ClassPassiveInvalid, ElementName=classPassives}" HorizontalAlignment="Left" Margin="120,0,0,30">
                                            <Control Template="{StaticResource SelectPassives}" DataContext="{Binding Passives}"/>
                                        </ContentControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock Text="{Binding Source='UI_CC_Max_Hp_Increase', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <Grid HorizontalAlignment="Center" Margin="0,16,0,0" DataContext="{Binding DummyCharacter.Stats.ClassList[0].MaxHpIncrease}" ToolTipService.Placement="Left">
                            <TextBlock Text="{Binding Title}" Foreground="{DynamicResource LS_PrimaryColor}" TextWrapping="Wrap" Margin="0,20,0,0"/>
                            <Grid.ToolTip>
                                <ls:LSTooltip>
                                    <ls:LSTooltip.Template>
                                        <ControlTemplate>
                                            <ContentControl Template="{StaticResource BaseTooltipTemplate}">
                                                <StackPanel>
                                                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Title}"/>
                                                    <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                                                        <i:Interaction.Behaviors>
                                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                                        </i:Interaction.Behaviors>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ContentControl>
                                        </ControlTemplate>
                                    </ls:LSTooltip.Template>
                                </ls:LSTooltip>
                            </Grid.ToolTip>
                        </Grid>

                        <ContentControl Template="{StaticResource CharacterClassFeatures}" Visibility="{Binding ClassProgressionDetails.IsEmpty, Converter={StaticResource BoolToHiddenConverter}}"/>

                    </StackPanel>
                </ContentControl>

                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Subclasses.ComboItems.Count}" Value="0">
                        <Setter TargetName="classSpells" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="classSpellPreparation" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="SkillsCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="46,0,0,0">
                    <StackPanel>

                        <TextBlock Text="{Binding Source='UI_CC_Select_Skills', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelTitleText}"/>

                        <StackPanel>

                            <TextBlock Text="{Binding Source='UI_CC_Skills_Intro', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelTitleInfoText}" Margin="0,50,0,0"/>

                            <ContentControl Template="{DynamicResource SkillSelectionBox}" DataContext="{Binding RaceSkills}">
                                <ContentControl.Resources>
                                    <ControlTemplate x:Key="Title">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_race.png" Stretch="None" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                            <TextBlock x:Name="txt" Style="{StaticResource SkillHeaderText}" Foreground="{DynamicResource LS_PrimaryColor}" VerticalAlignment="Center">
                                                <Run Text="{Binding Source='UI_CC_Select_Race_Skills', Converter={StaticResource TranslatedStringConverter}}"/>
                                                <Run Text="{Binding SelectedSkillCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedSkillCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource LS_SecondaryColor}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Resources>
                            </ContentControl>

                            <ContentControl Template="{DynamicResource SkillSelectionBox}" DataContext="{Binding ClassSkills}">
                                <ContentControl.Resources>
                                    <ControlTemplate x:Key="Title">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_class.png" Stretch="None" VerticalAlignment="Center" Margin="0,-10,10,0"/>
                                            <TextBlock x:Name="txt" Style="{StaticResource SkillHeaderText}" Foreground="{DynamicResource LS_PrimaryColor}" VerticalAlignment="Center">
                                                <Run Text="{Binding Source='UI_CC_Select_Class_Skills', Converter={StaticResource TranslatedStringConverter}}"/>
                                                <Run Text="{Binding SelectedSkillCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedSkillCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource LS_SecondaryColor}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Resources>
                            </ContentControl>

                            <StackPanel HorizontalAlignment="Stretch" Margin="0,20,0,20" Visibility="{Binding UnavailableSkills.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <TextBlock Text="{Binding Source='UI_CC_Unavailable_Skills', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SkillHeaderText}" Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center"/>
                                <ItemsControl ItemsSource="{Binding UnavailableSkills}" Margin="180,10,0,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="0,8,0,0" Background="Transparent" Visibility="{Binding Enabled, Converter={StaticResource BoolToVisibleConverter}}">
                                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/checkMark_skills_unavailable.png" Stretch="None" VerticalAlignment="Top" Margin="0,12,0,0"/>
                                                <TextBlock Text="{Binding DisplayName}" Foreground="{DynamicResource LS_InactivePanelFontColor}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Left" Margin="16,0,0,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>

                        </StackPanel>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>

            <ControlTemplate x:Key="AbilitiesCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="38,0,0,0">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="100,0,-100,0">
                            <TextBlock Text="{Binding Source='UI_CC_Assign_Ability_Points', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelTitleText}" Margin="0,0,100,0"/>

                            <ContentControl Template="{StaticResource ValidationFailedHighlighter}" Tag="{Binding AbilitiesInvalid}" HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="{DynamicResource BigFontSize}">
                                    <Run Text="{Binding UnusedAbilityPoints}"/>
                                    <Run Text="{Binding TotalAbilityPoints, StringFormat='/{0}'}"/>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding UnusedAbilityPoints}" Value="0">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </ContentControl>
                        </StackPanel>

                        <!-- The DataContext Binding to VMCharacter is for Tooltips FindPlayerAndCharacter -->
                        <ItemsControl DataContext="{Binding DummyCharacter}" ItemsSource="{Binding Stats.Abilities}" Margin="0,4,0,0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource AbilityAdjusterTemplate}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Margin" Value="0,0,0,-50"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>

                        <Grid HorizontalAlignment="Center" ToolTip="{StaticResource ManagedTooltip}" DataContext="{Binding DummyCharacter.Stats.ProficiencyBonus}" Margin="0,32,0,0">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/decorated_box.png" Stretch="None"/>
                            <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Run Text="{Binding DisplayName}"/>
                            <Run Text="{Binding Value, StringFormat={}{0: +#; -#; -}}"/>
                            </TextBlock>
                        </Grid>

                        <ls:LSButton Content="{Binding Source='UI_CC_Use_Recommended', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding DataContext.UseRecommendedAbilities, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" IsEnabled="{Binding CanUseRecommendedAbilities}" Template="{DynamicResource TextButtonTemplate}" Margin="0,40,0,20" SoundID="UI_HUD_CC_Recommended">
                            <ls:LSButton.Resources>
                                <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_d.png</ImageSource>
                                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_h.png</ImageSource>
                                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_p.png</ImageSource>
                                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_disabled.png</ImageSource>
                            </ls:LSButton.Resources>
                        </ls:LSButton>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>

            <ControlTemplate x:Key="CompanionCharacterCreationTemplate">
                <ContentControl Template="{StaticResource CommonCharacterCreationPanel}" Padding="34,0,0,0">
                    <StackPanel>
                        <TextBlock Text="{Binding Source='UI_CC_Perfect_Companion', Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource PanelTitleText}" VerticalAlignment="Bottom"/>
                        <TextBlock Text="{Binding Source='UI_CC_Select_Race', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Races}" Resources="{StaticResource SideBoxesTripleResources}" Margin="0,32,0,0"/>

                        <StackPanel Visibility="{Binding Subraces.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}" Margin="0,32,0,0">
                            <TextBlock Text="{Binding Source='UI_CC_Select_Subrace', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
                            <ContentControl Template="{DynamicResource Carousel}" Margin="0,20,0,0" DataContext="{Binding Subraces}"/>
                        </StackPanel>

                        <TextBlock Text="{Binding DummyCharacter.Stats.RaceDescription}" Style="{StaticResource PanelTitleInfoText}" Margin="0,32,0,0"/>

                        <ContentControl Template="{StaticResource SpellBoxesTemplate}" DataContext="{Binding RaceProgressionDetails}"/>

                        <Control Template="{StaticResource AppearanceTemplate}"/>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>

        </ResourceDictionary>
    </ls:UIWidget.Resources>


    <Grid>
        <ls:LSButton Command="{Binding ExitCharacterCreation}" SoundID="UI_HUD_CC_Accept" Style="{StaticResource CloseButton}" HorizontalAlignment="Right" VerticalAlignment="Top"/>
        <Control Template="{StaticResource CharacterCreationStepButtons}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="-224,10,224,0"/>

        <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="30,0,0,48">
            <Control Template="{StaticResource CharacterCardTemplate}">
                <Control.Style>
                    <Style TargetType="Control">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Control.Style>
            </Control>
        </Grid>

        <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="-400,0,0,48">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="0,0,0,20">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Hidden"/>
                                    <Condition Binding="{Binding CharacterCreationStep}" Value="Finish"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Visible"/>
                                    <Condition Binding="{Binding CharacterCreationStep}" Value="Finish"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                                                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Image VerticalAlignment="Center" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/BigBtn_sideDecor.png" Stretch="None" Panel.ZIndex="0"/>

                <ls:LSButton VerticalAlignment="Center" Margin="-90,0,-90,0" HorizontalAlignment="Center" Panel.ZIndex="1">
                    <ls:LSButton.Style>
                        <Style TargetType="ls:LSButton" BasedOn="{StaticResource BigButtonStyle}">
                            <Setter Property="IsEnabled" Value="{Binding IsCharacterComplete}"/>
                            <Setter Property="Content" Value="{Binding Source='UI_CC_VentureForth', Converter={StaticResource TranslatedStringConverter}}"/>
                            <Setter Property="Command" Value="{Binding FinishCreating}"/>
                            <Setter Property="SoundID" Value="UI_HUD_CC_VentureForth"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Visible"/>
                                        <Condition Binding="{Binding CurrentPlayer.Ready}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Content" Value="{Binding Source='UI_CC_WaitingForOthers', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ls:LSButton.Style>
                </ls:LSButton>

                <Image VerticalAlignment="Center" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/BigBtn_sideDecor.png" Stretch="None" Panel.ZIndex="0">
                    <Image.RenderTransform>
                        <ScaleTransform ScaleX="-1" CenterX="80"/>
                    </Image.RenderTransform>
                </Image>

            </StackPanel>
        </Grid>

        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/contentPane.png" Stretch="None"/>
            <Control Height="1920" MaxHeight="1920" VerticalAlignment="Bottom">
                <Control.Style>
                    <Style TargetType="Control"  BasedOn="{StaticResource {x:Type Control}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Origin">
                                <Setter Property="Template" Value="{StaticResource OriginCharacterCreationTemplate}"/>
                                <Setter Property="Margin" Value="0,0,-200,0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Race">
                                <Setter Property="Template" Value="{StaticResource RaceCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Appearance">
                                <Setter Property="Template" Value="{StaticResource AppearanceCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Class">
                                <Setter Property="Template" Value="{StaticResource ClassCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Skills">
                                <Setter Property="Template" Value="{StaticResource SkillsCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Abilities">
                                <Setter Property="Template" Value="{StaticResource AbilitiesCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <Setter Property="Template" Value="{StaticResource CompanionCharacterCreationTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Control.Style>
            </Control>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <ContentControl x:Name="multiplayer" Template="{StaticResource MultiplayerPanelTemplate}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="42,32,0,0"/>

    </Grid>

</ls:UIWidget>